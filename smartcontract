pragma solidity ^0.5.0;

contract smartcontract{
    mapping(address => uint) public buyer;
    address  sender;
    uint coins=100;
    constructor(address  _address)  public{
        sender = _address;
        buyer[_address]=coins;
        
    }
    
    function sendcoin(address  _toaddress,uint _coin) public returns(string memory){
       if(buyer[sender]>0){
        buyer[sender] -=_coin;
        buyer[_toaddress] +=_coin;
         return "succesfull transaction"; 
       }
       else{
           return "insuffient balance";
       }
        
    }
    function checkbal(address payable _address) public returns(uint ){
        return buyer[_address];
    }
  
} 
